# Crude Nozzle Alignment 
#
# Set your nudge pin here
[gcode_button cna_sensor_pin]
pin: !PA4 #Filament pin for now
press_gcode:
release_gcode:

###########################################################################
# These options usually are fine as they are
[gcode_macro _cna_variables]
variable_cna_resolution: 0.01      
variable_cna_travel_speed: 20
################################################################################

#############################################################################
# These variables are used by the aligner
variable_cna_value_x: 0
variable_cna_value_y: 0
variable_cna_value_z: 0
variable_probe_value_x: 0
variable_probe_value_y: 0
variable_probe_value_z: 0
variable_cna_cal_z: 0
variable_cna_cal_x: 0
variable_cna_cal_y: 0
#variable_cna_probe_centerx: 0
#variable_cna_probe_centery: 0
#variable_cna_probe_centerz: 0
gcode:
############################################################################

#################################################################################
# Start of alignment with hardcorded values and steps. Find Probe offsets first and then find tool offsets
[gcode_macro CNA_FIND_OFFSETS]
gcode:
  #SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_probe_centerx VALUE={printer.toolhead.position.x}
  #SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_probe_centery VALUE={printer.toolhead.position.y}
  #SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_probe_centerz VALUE={printer.toolhead.position.z}
  {% set do_probe = params.PROBE %}
  {% if do_probe|lower == 'true' %}
	M118 Probe Calibration
    _TRIGGER_CNA_PROBE
  {% else %}
    M118 Tool Calibration
	_TRIGGER_CNA_TOOL
  {% endif %}
  
  
[gcode_macro _TRIGGER_CNA_PROBE]
gcode:
  G91
  {% for moves in range(1000) %}
    _Move_Head PROBE={True}
  {% endfor %}
  _Store_ValuesNow PROBE={True}
  _Print_Result CALIBRATE={True}
  G90
  M118 Probe Calibration Done!
  

[gcode_macro _TRIGGER_CNA_TOOL]
gcode:
  G91
  {% for moves in range(1000) %}
    _Move_Head PROBE={False}
  {% endfor %}
  _Store_ValuesNow PROBE={False}
  _Print_Result CALIBRATE={False}
  G90
  M118 Tool Calibration Done!
  

[gcode_macro _Move_Head]
gcode:
  {% set cna_speed = printer["gcode_macro _cna_variables"].cna_travel_speed * 60 %}
  {% set cna_state = printer['gcode_button cna_sensor_pin'].state %}
  {% set do_probe = params.PROBE %}
  {% if cna_state == "RELEASED" %}
    {% set cna_resolution = printer["gcode_macro _cna_variables"].cna_resolution %}
    {% set move_direction = "Z-%f" % (cna_resolution) %}
    G0 {move_direction} F{cna_speed}
    M400
  {% else %}
    {% if do_probe|lower == 'true' %}
		SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=probe_value_x VALUE={printer.toolhead.position.x}
		SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=probe_value_y VALUE={printer.toolhead.position.y}
		SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=probe_value_z VALUE={printer.toolhead.position.z}
    {% else %}
		SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_value_x VALUE={printer.toolhead.position.x}
		SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_value_y VALUE={printer.toolhead.position.y}
		SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_value_z VALUE={printer.toolhead.position.z}
    {% endif %}
  {% endif %}

  
[gcode_macro _Store_ValuesNow]
gcode:
	{% set do_probe = params.PROBE %}
	{% if do_probe|lower == 'true' %}
		SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=probe_value_x VALUE={printer.toolhead.position.x}
		SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=probe_value_y VALUE={printer.toolhead.position.y}
		SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=probe_value_z VALUE={printer.toolhead.position.z}
        M118 Probe variable stored
    {% else %}
		{% set refx = printer["gcode_macro _cna_variables"].probe_value_x|float %}
		{% set refy = printer["gcode_macro _cna_variables"].probe_value_y|float %}
		{% set refz = printer["gcode_macro _cna_variables"].probe_value_z|float %}
		SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_value_x VALUE={printer.toolhead.position.x}
		SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_value_y VALUE={printer.toolhead.position.y}
		SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_value_z VALUE={printer.toolhead.position.z}
		SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_cal_x VALUE={printer.toolhead.position.x - refx}
		SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_cal_y VALUE={printer.toolhead.position.y - refy}
		SET_GCODE_VARIABLE MACRO=_cna_variables VARIABLE=cna_cal_z VALUE={printer.toolhead.position.z - refz - 4.5}
        M118 Tool variable stored
	{% endif %} 



[gcode_macro _Print_Result]
gcode:
  {% set do_calibrate = params.CALIBRATE %}
  {% if do_calibrate|lower == 'true' %}
	{% set refx = printer["gcode_macro _cna_variables"].probe_value_x|float %}
	{% set refy = printer["gcode_macro _cna_variables"].probe_value_y|float %}
	{% set refz = printer["gcode_macro _cna_variables"].probe_value_z|float %}
    { action_respond_info("=========================") }
	{ action_respond_info("CNA Probe Position is: ") }
	{ action_respond_info("Probe: X: %.2f" % (refx)) }
	{ action_respond_info("Probe: Y: %.2f" % (refy)) }
	{ action_respond_info("Probe: Z: %.2f" % (refz)) }
	{ action_respond_info("CNA Probe: ------------") }
	{ action_respond_info("=========================") }
    M118 Probe print done
  {% else %}
    {% set refx = printer["gcode_macro _cna_variables"].cna_value_x|float %}
	{% set refy = printer["gcode_macro _cna_variables"].cna_value_y|float %}
	{% set refz = printer["gcode_macro _cna_variables"].cna_value_z|float %}
	{% set calx = printer["gcode_macro _cna_variables"].cna_cal_x|float %}
	{% set caly = printer["gcode_macro _cna_variables"].cna_cal_y|float %}
	{% set calz = printer["gcode_macro _cna_variables"].cna_cal_z|float %}
	{ action_respond_info("=========================") }
	{ action_respond_info("CNA Tool Position is: ") }
	{ action_respond_info("Tool: X: %.2f" % (refx)) }
	{ action_respond_info("Tool: Y: %.2f" % (refy)) }
	{ action_respond_info("Tool: Z: %.2f" % (refz)) }
	{ action_respond_info("Tool: Xoffset: %.2f" % (calx)) }
	{ action_respond_info("Tool: Yoffset: %.2f" % (caly)) }
	{ action_respond_info("Tool: Zoffset: %.2f" % (calz)) }
	{ action_respond_info("CNA Tool: ------------") }
	{ action_respond_info("=========================") }
    M118 Tool print done
  {% endif %}
  